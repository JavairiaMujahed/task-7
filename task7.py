# -*- coding: utf-8 -*-
"""task7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xn_-CybexhByuviKUPlefCVPC35r4jIp
"""

import sqlite3

connection = sqlite3.connect('sales_data.db', uri=True)

crsr = connection.cursor()

print("Connected to the database")

# SQL command to create a table in the database
sql_command = """CREATE TABLE sales (
transaction_id INTEGER PRIMARY KEY,
sale_date DATE,
product_category VARCHAR(30),
product_name VARCHAR(30),
units_sold INTEGER,
unit_price FLOAT,
total_revenue FLOAT,
region VARCHAR(30),
payment_method VARCHAR(30));"""

# execute the statement
crsr.execute(sql_command)

# Fetch and print the names of existing tables
crsr.execute("SELECT name FROM sqlite_master WHERE type='table';")
tables = crsr.fetchall()
print(tables)

# SQL command to insert the data in the table
sql_command = """INSERT INTO sales VALUES (101, '2024-01-01', 'Electronics', 'iPhone 14 Pro', 2, 999.99, 1999.98, 'North America', 'Credit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (102, '2024-01-02', 'Home Appliances', 'Dyson v11 Vacuum', 1, 499.99, 499.99, 'Europe', 'PayPal');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (103,'2024-01-03','Clothing', 'Levi501 Jeans' ,3,69.99,209.97,'Asia','Debit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (104,'2024-01-04','Books','The Da Vinci Code',4,15.99,63.96,'North America','Credit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (105,'2024-01-05','Beauty Products','Neutrogena Skincare Set',1,89.99,89.99,'Europe','PayPal');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (106,'2024-01-06','Sports','Wilson Evolution Basketball',5,29.99,149.95,'Asia','Credit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (107,'2024-01-07','Electronics','MacBook Pro 16-inch',1,2499.99,2499.99,'North America','Credit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (108,'2024-01-08','Home Appliances','Blueair Classic 480i',2,599.99,1199.98,'Europe','PayPal');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (109,'2024-01-09','Clothing','Nike Air Force 1',6,89.99,539.94,'Asia','Debit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (110,'2024-01-10','Books','Dune by Frank Herbert',2,25.99,51.98,'North America','Credit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (111,'2024-01-11','Beauty Products','Chanel No. 5 Perfume',1,129.99,129.99,'Europe','PayPal');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (112,'2024-01-12','Sports','Babolat Pure Drive Tennis Racket',3,199.99,599.97,'Asia','Credit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (113,'2024-01-13','Electronics','Samsung Galaxy Tab S8',2,749.99,1499.98,'North America','Credit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (114,'2024-01-14','Home Appliances','Keurig K-Elite Coffee Maker',1,189.99,189.99,'Europe','PayPal');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (115,'2024-01-15','Clothing','North Face Down Jacket',2,249.99,499.98,'Asia','Debit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (116,'2024-01-16','Books','Salt, Fat, Acid, Heat by Samin Nosrat',3,35.99,107.97,'North America','Credit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (117,'2024-01-17','Beauty Products','Dyson Supersonic Hair Dryer',1,399.99,399.99,'Europe','PayPal');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (118,'2024-01-18','Sports','Manduka PRO Yoga Mat',4,119.99,479.96,'Asia','Credit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (119,'2024-01-19','Electronics','Garmin Forerunner 945',2,499.99,999.98,'North America','Credit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (120,'2024-01-20','Home Appliances','Ninja Professional Blender',1,99.99,99.99,'Europe','PayPal');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (121,'2024-01-21','Clothing','Zara Summer Dress',3,59.99,179.97,'Asia','Debit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (122,'2024-01-22','Books','Gone Girl by Gillian Flynn',2,22.99,45.98,'North America','Credit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (123,'2024-01-23','Beauty Products','Olay Regenerist Face Cream',1,49.99,49.99,'Europe','PayPal');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (124,'2024-01-24','Sports','Adidas FIFA World Cup Football',3,29.99,89.97,'Asia','Credit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (125,'2024-01-25','Electronics','Bose QuietComfort 35 Headphones',1,299.99,299.99,'North America','Credit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (126,'2024-01-26','Home Appliances','Panasonic NN-SN966S Microwave',1,179.99,179.99,'Europe','PayPal');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (127,'2024-01-27','Clothing','Adidas Ultraboost Shoes',2,179.99,359.98,'Asia','Debit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (128,'2024-01-28','Books','Pride and Prejudice by Jane Austen',3,12.99,38.97,'North America','Credit Card');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (129,'2024-01-29','Beauty Products','MAC Ruby Woo Lipstick',1,29.99,29.99,'Europe','PayPal');"""
crsr.execute(sql_command)
sql_command = """INSERT INTO sales VALUES (130,'2024-01-30','Sports','Nike Air Zoom Pegasus 37',2,129.99,259.98,'Asia','Credit Card');"""

crsr.execute(sql_command)
connection.commit()

# execute the command to fetch all the data from the table emp
crsr.execute("SELECT * FROM sales")

# store all the fetched data in the ans variable
ans = crsr.fetchall()

# Since we have already selected all the data entries
# using the "SELECT *" SQL command and stored them in
# the ans variable, all we need to do now is to print
# out the ans variable
for i in ans:
    print(i)

# Updating
crsr.execute('''DELETE FROM sales WHERE transaction_id="1001";''')
crsr.execute('''DELETE FROM sales WHERE transaction_id="1002";''')

# Commit your changes in the database
connection.commit()

# execute the command to fetch all the data from the table emp
crsr.execute("SELECT * FROM sales")

# store all the fetched data in the ans variable
ans = crsr.fetchall()

# Since we have already selected all the data entries
# using the "SELECT *" SQL command and stored them in
# the ans variable, all we need to do now is to print
# out the ans variable
for i in ans:
    print(i)

# Close the database connection
connection.close()

import sqlite3
import pandas as pd

# Connect to the SQLite database
connection = sqlite3.connect('sales_data.db')

# Execute a SELECT query
query = ('SELECT product_name, SUM(units_sold) AS total_units_sold, SUM(units_sold*unit_price) AS revenue FROM sales GROUP BY product_name ORDER BY revenue DESC;')
results = pd.read_sql_query(query,connection)

# Print the results
print(results)

# Close the database connection
connection.close()

import sqlite3
import pandas as pd

# Connect to the SQLite database
connection = sqlite3.connect('sales_data.db')

# Execute a SELECT query
query = ('SELECT product_category, SUM(units_sold) AS total_units_sold, SUM(units_sold*unit_price) AS revenue FROM sales GROUP BY product_category ORDER BY total_units_sold DESC;')
results = pd.read_sql_query(query,connection)

# Print the results
print(results)

# Close the database connection
connection.close()

import sqlite3
import pandas as pd

# Connect to the SQLite database
connection = sqlite3.connect('sales_data.db')

# Execute a SELECT query
query = ('SELECT product_category, SUM(units_sold) AS total_units_sold, SUM(units_sold*unit_price) AS revenue FROM sales GROUP BY product_category ORDER BY revenue DESC;')
results = pd.read_sql_query(query,connection)

# Print the results
print(results)

# Close the database connection
connection.close()

import sqlite3
import pandas as pd
import matplotlib.pyplot as plt # import the pyplot module and alias it as plt

# Connect to the SQLite database
connection = sqlite3.connect('sales_data.db')

# Execute a SELECT query
query = ('SELECT product_category, SUM(units_sold) AS total_units_sold, SUM(units_sold*unit_price) AS revenue FROM sales GROUP BY product_category ORDER BY revenue DESC;')
results = pd.read_sql_query(query,connection)

# Print the results
print(results)

import pandas as pd
df = pd.read_sql_query(query, connection)
print(df)
df.plot(kind='bar', x='product_category', y='revenue')
plt.savefig("sales_chart.png") # Use plt.savefig to save the figure

# Close the database connection
connection.close()

